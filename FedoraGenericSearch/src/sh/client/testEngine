#!/bin/sh
#$Id$

# <p><b>License and Copyright: </b>The contents of this file will be subject to the
# same open source license as the Fedora Repository System at www.fedora.info
# It is expected to be released with Fedora version 2.2.

# Copyright &copy; 2006 by The Technical University of Denmark.
# All rights reserved.</p>

# @author  gsp@dtv.dk
# @version 

# This script is in the fedoragsearch distribution in WEBSERVER/webapps/fedoragsearch/client
# together with a set of test suite scripts.

# This script assumes that a Fedora repository is running on HOSTPORT.

# The TESTHOME dir is assumed to contain expected test results in $TESTHOME/expected/$SUITE

# The script is sourced from a test suite script, installed in the same directory.
# The SUITE name is given by the calling script name.

# Each test suite script in the fedoragsearch distribution has expected test results with it.

# The client program name is given as parameter to begin_suite().
# it must be installed in the same directory.

# Two client programs are in the fedoragsearch distribution: RESTClient and SOAPClient,
# they can be called with runRESTClient.sh and runSOAPClient.sh,
# they can be found in WEBSERVER/webapps/fedoragsearch/client, and should be called from there.

# When MODE="expected" then test run results will appear in $TESTHOME/expected/$SUITE
# When MODE="" then
#   Test run results will appear in $TESTHOME/result/$SUITE
#   Test results will appear in $TESTHOME/diff/$SUITE as the diff between expected and result.
#   Diff count will come out of end_suite().

HOSTPORT=localhost:8080
TESTHOME=.
SUITE=$0
MODE=$1

get_timestamp(){
    echo "`date '+20%y-%m-%d %T'`"
}

usage(){
    echo "Usage:"
    echo "    sh $0 [expected]"
}

run_test(){
    echo "<`get_timestamp`>$CLIENT $1 $2 $3 $4 $5 $6 $7 $8 $9 "
    TESTCOUNT=`expr $TESTCOUNT "+" 1`
    FILENAME=$CLIENT.$TESTCOUNT
    if [ -n "$MODE" ] ; then
        sh $CLIENT $HOSTPORT $1 $2 $3 $4 $5 $6 $7 $8 $9 > $TESTHOME/expected/$SUITE/$FILENAME
    else
        sh $CLIENT $HOSTPORT $1 $2 $3 $4 $5 $6 $7 $8 $9 > $TESTHOME/result/$SUITE/$FILENAME 2>&1
        if [ $? != 0 ]; then
            cat $TESTHOME/result/$SUITE/$FILENAME
            DIFFCOUNT=`expr $DIFFCOUNT "+" 1`
    	else
            diff -I.*milliseconds.* -I.*resultPage.* -I.*cvsDate.* $TESTHOME/expected/$SUITE/$FILENAME $TESTHOME/result/$SUITE/$FILENAME > $TESTHOME/diff/$SUITE/$FILENAME
            if [ ! `cat $TESTHOME/diff/$SUITE/$FILENAME | wc -c` = 0 ] ; then 
                cat $TESTHOME/diff/$SUITE/$FILENAME
                DIFFCOUNT=`expr $DIFFCOUNT "+" 1`
            fi;
        fi;
    fi;
}

run_test_error(){
    if [ -z "$MODE" ] ; then
        echo "<`get_timestamp`>$CLIENT $1 $2 $3 $4 $5 $6 $7 $8 $9 "
        EXPECTED_ERRORMESSAGE=$1
        TESTCOUNT=`expr $TESTCOUNT "+" 1`
        FILENAME=$CLIENT.$TESTCOUNT
        echo "$EXPECTED_ERRORMESSAGE" > $TESTHOME/expected/$SUITE/$FILENAME
        sh $CLIENT $HOSTPORT $2 $3 $4 $5 $6 $7 $8 $9 > $TESTHOME/result/$SUITE/$FILENAME 2>&1
        if [ $? != 0 ]; then
            cat $TESTHOME/result/$SUITE/$FILENAME
            DIFFCOUNT=`expr $DIFFCOUNT "+" 1`
    	else
            cat $TESTHOME/result/$SUITE/$FILENAME
    	    ERRORMESSAGE=`grep "<error>" "$TESTHOME/result/$SUITE/$FILENAME"  | perl -ne '$_ =~ /message>(.*)<message/; print $1'`
            if [ "$EXPECTED_ERRORMESSAGE" != "$ERRORMESSAGE" ] ; then 
                echo "EXPECTED_ERRORMESSAGE=$EXPECTED_ERRORMESSAGE" > $TESTHOME/diff/$SUITE/$FILENAME
                echo "         ERRORMESSAGE=$ERRORMESSAGE" >> $TESTHOME/diff/$SUITE/$FILENAME
                cat $TESTHOME/diff/$SUITE/$FILENAME
                DIFFCOUNT=`expr $DIFFCOUNT "+" 1`
            fi;
        fi;
    fi;
}

begin_suite(){
    CLIENT=$1
    TESTCOUNT=0
    DIFFCOUNT=0
}

end_suite(){
    echo "<`get_timestamp`>TESTCOUNT=$TESTCOUNT"
    if [ -z "$MODE" ] ; then
        echo "<`get_timestamp`>DIFFCOUNT=$DIFFCOUNT"
    fi;
}

echo "<`get_timestamp`>testEngine $*"

if [ $# -gt 1 ] ; then
    usage
    exit 1
fi;

if [ $# -eq 1 ] ; then
    if [ ! $MODE = "expected" ] ; then
        usage
        exit 1
    fi;
fi;

if [ ! -d $TESTHOME/expected ] ; then
    mkdir $TESTHOME/expected
fi;
if [ -n "$MODE" ] ; then
    if [ -d $TESTHOME/expected/$SUITE ] ; then
        rm -r $TESTHOME/expected/$SUITE
    fi;
    mkdir $TESTHOME/expected/$SUITE
fi;

if [ ! -d $TESTHOME/result ] ; then
    mkdir $TESTHOME/result
fi;
if [ -d $TESTHOME/result/$SUITE ] ; then
    rm -r $TESTHOME/result/$SUITE
fi;
mkdir $TESTHOME/result/$SUITE

if [ ! -d $TESTHOME/diff ] ; then
    mkdir $TESTHOME/diff
fi;
if [ -d $TESTHOME/diff/$SUITE ] ; then
    rm -r $TESTHOME/diff/$SUITE
fi;
mkdir $TESTHOME/diff/$SUITE
